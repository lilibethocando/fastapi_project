name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres:11.1
        env:
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{SECRETS.DATABASE_NAME}}_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval=10s
          --health-timeout=5s 
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.8
      - name: update pip
        run: python -m pip install --upgrade pip 
      - name: install requirements
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest -v -s  tests/

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
      #     cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:buildcache
      #     cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:buildcache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: deploy to production
        run: echo "deploy to production"


      
      
        


